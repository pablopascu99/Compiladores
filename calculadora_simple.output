Terminals unused in grammar

   THEN
   IF
   ELSE
   SEMI
   STR


Grammar

    0 $accept: stmt $end

    1 stmt: expr DONE
    2     | expr2 DONE
    3     | bool DONE

    4 expr: expr PLUS term
    5     | expr MINUS term
    6     | term

    7 term: term MULTIPLY factor
    8     | term DIVIDE factor
    9     | factor

   10 factor: ENT
   11       | LEFT expr RIGHT
   12       | MINUS ENT

   13 expr2: expr2 PLUS term2
   14      | expr2 MINUS term2
   15      | term2

   16 term2: term2 MULTIPLY factor2
   17      | term2 DIVIDE factor2
   18      | factor2

   19 factor2: REAL
   20        | LEFT expr2 RIGHT
   21        | MINUS REAL

   22 boolean_op: EQUALS
   23           | GREATERTHAN
   24           | LESSERTHAN
   25           | GREATEROREQUALSTHAN
   26           | LESSEROREQUALSTHAN
   27           | DIFFERENTTHAN

   28 boolean_var: TRUE
   29            | FALSE

   30 bool: expr boolean_op expr2
   31     | boolean_var boolean_op boolean_var


Terminals, with rules where they appear

$end (0) 0
error (256)
REAL (258) 19 21
ENT (259) 10 12
PLUS (260) 4 13
MINUS (261) 5 12 14 21
DIVIDE (262) 8 17
MULTIPLY (263) 7 16
LEFT (264) 11 20
RIGHT (265) 11 20
DONE (266) 1 2 3
LESSEROREQUALSTHAN (267) 26
GREATEROREQUALSTHAN (268) 25
DIFFERENTTHAN (269) 27
LESSERTHAN (270) 24
GREATERTHAN (271) 23
EQUALS (272) 22
THEN (273)
IF (274)
ELSE (275)
SEMI (276)
STR (277)
TRUE (278) 28
FALSE (279) 29


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
stmt (26)
    on left: 1 2 3, on right: 0
expr (27)
    on left: 4 5 6, on right: 1 4 5 11 30
term (28)
    on left: 7 8 9, on right: 4 5 6 7 8
factor (29)
    on left: 10 11 12, on right: 7 8 9
expr2 (30)
    on left: 13 14 15, on right: 2 13 14 20 30
term2 (31)
    on left: 16 17 18, on right: 13 14 15 16 17
factor2 (32)
    on left: 19 20 21, on right: 16 17 18
boolean_op (33)
    on left: 22 23 24 25 26 27, on right: 30 31
boolean_var (34)
    on left: 28 29, on right: 31
bool (35)
    on left: 30 31, on right: 3


state 0

    0 $accept: . stmt $end

    REAL   shift, and go to state 1
    ENT    shift, and go to state 2
    MINUS  shift, and go to state 3
    LEFT   shift, and go to state 4
    TRUE   shift, and go to state 5
    FALSE  shift, and go to state 6

    stmt         go to state 7
    expr         go to state 8
    term         go to state 9
    factor       go to state 10
    expr2        go to state 11
    term2        go to state 12
    factor2      go to state 13
    boolean_var  go to state 14
    bool         go to state 15


state 1

   19 factor2: REAL .

    $default  reduce using rule 19 (factor2)


state 2

   10 factor: ENT .

    $default  reduce using rule 10 (factor)


state 3

   12 factor: MINUS . ENT
   21 factor2: MINUS . REAL

    REAL  shift, and go to state 16
    ENT   shift, and go to state 17


state 4

   11 factor: LEFT . expr RIGHT
   20 factor2: LEFT . expr2 RIGHT

    REAL   shift, and go to state 1
    ENT    shift, and go to state 2
    MINUS  shift, and go to state 3
    LEFT   shift, and go to state 4

    expr     go to state 18
    term     go to state 9
    factor   go to state 10
    expr2    go to state 19
    term2    go to state 12
    factor2  go to state 13


state 5

   28 boolean_var: TRUE .

    $default  reduce using rule 28 (boolean_var)


state 6

   29 boolean_var: FALSE .

    $default  reduce using rule 29 (boolean_var)


state 7

    0 $accept: stmt . $end

    $end  shift, and go to state 20


state 8

    1 stmt: expr . DONE
    4 expr: expr . PLUS term
    5     | expr . MINUS term
   30 bool: expr . boolean_op expr2

    PLUS                 shift, and go to state 21
    MINUS                shift, and go to state 22
    DONE                 shift, and go to state 23
    LESSEROREQUALSTHAN   shift, and go to state 24
    GREATEROREQUALSTHAN  shift, and go to state 25
    DIFFERENTTHAN        shift, and go to state 26
    LESSERTHAN           shift, and go to state 27
    GREATERTHAN          shift, and go to state 28
    EQUALS               shift, and go to state 29

    boolean_op  go to state 30


state 9

    6 expr: term .
    7 term: term . MULTIPLY factor
    8     | term . DIVIDE factor

    DIVIDE    shift, and go to state 31
    MULTIPLY  shift, and go to state 32

    $default  reduce using rule 6 (expr)


state 10

    9 term: factor .

    $default  reduce using rule 9 (term)


state 11

    2 stmt: expr2 . DONE
   13 expr2: expr2 . PLUS term2
   14      | expr2 . MINUS term2

    PLUS   shift, and go to state 33
    MINUS  shift, and go to state 34
    DONE   shift, and go to state 35


state 12

   15 expr2: term2 .
   16 term2: term2 . MULTIPLY factor2
   17      | term2 . DIVIDE factor2

    DIVIDE    shift, and go to state 36
    MULTIPLY  shift, and go to state 37

    $default  reduce using rule 15 (expr2)


state 13

   18 term2: factor2 .

    $default  reduce using rule 18 (term2)


state 14

   31 bool: boolean_var . boolean_op boolean_var

    LESSEROREQUALSTHAN   shift, and go to state 24
    GREATEROREQUALSTHAN  shift, and go to state 25
    DIFFERENTTHAN        shift, and go to state 26
    LESSERTHAN           shift, and go to state 27
    GREATERTHAN          shift, and go to state 28
    EQUALS               shift, and go to state 29

    boolean_op  go to state 38


state 15

    3 stmt: bool . DONE

    DONE  shift, and go to state 39


state 16

   21 factor2: MINUS REAL .

    $default  reduce using rule 21 (factor2)


state 17

   12 factor: MINUS ENT .

    $default  reduce using rule 12 (factor)


state 18

    4 expr: expr . PLUS term
    5     | expr . MINUS term
   11 factor: LEFT expr . RIGHT

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    RIGHT  shift, and go to state 40


state 19

   13 expr2: expr2 . PLUS term2
   14      | expr2 . MINUS term2
   20 factor2: LEFT expr2 . RIGHT

    PLUS   shift, and go to state 33
    MINUS  shift, and go to state 34
    RIGHT  shift, and go to state 41


state 20

    0 $accept: stmt $end .

    $default  accept


state 21

    4 expr: expr PLUS . term

    ENT    shift, and go to state 2
    MINUS  shift, and go to state 42
    LEFT   shift, and go to state 43

    term    go to state 44
    factor  go to state 10


state 22

    5 expr: expr MINUS . term

    ENT    shift, and go to state 2
    MINUS  shift, and go to state 42
    LEFT   shift, and go to state 43

    term    go to state 45
    factor  go to state 10


state 23

    1 stmt: expr DONE .

    $default  reduce using rule 1 (stmt)


state 24

   26 boolean_op: LESSEROREQUALSTHAN .

    $default  reduce using rule 26 (boolean_op)


state 25

   25 boolean_op: GREATEROREQUALSTHAN .

    $default  reduce using rule 25 (boolean_op)


state 26

   27 boolean_op: DIFFERENTTHAN .

    $default  reduce using rule 27 (boolean_op)


state 27

   24 boolean_op: LESSERTHAN .

    $default  reduce using rule 24 (boolean_op)


state 28

   23 boolean_op: GREATERTHAN .

    $default  reduce using rule 23 (boolean_op)


state 29

   22 boolean_op: EQUALS .

    $default  reduce using rule 22 (boolean_op)


state 30

   30 bool: expr boolean_op . expr2

    REAL   shift, and go to state 1
    MINUS  shift, and go to state 46
    LEFT   shift, and go to state 47

    expr2    go to state 48
    term2    go to state 12
    factor2  go to state 13


state 31

    8 term: term DIVIDE . factor

    ENT    shift, and go to state 2
    MINUS  shift, and go to state 42
    LEFT   shift, and go to state 43

    factor  go to state 49


state 32

    7 term: term MULTIPLY . factor

    ENT    shift, and go to state 2
    MINUS  shift, and go to state 42
    LEFT   shift, and go to state 43

    factor  go to state 50


state 33

   13 expr2: expr2 PLUS . term2

    REAL   shift, and go to state 1
    MINUS  shift, and go to state 46
    LEFT   shift, and go to state 47

    term2    go to state 51
    factor2  go to state 13


state 34

   14 expr2: expr2 MINUS . term2

    REAL   shift, and go to state 1
    MINUS  shift, and go to state 46
    LEFT   shift, and go to state 47

    term2    go to state 52
    factor2  go to state 13


state 35

    2 stmt: expr2 DONE .

    $default  reduce using rule 2 (stmt)


state 36

   17 term2: term2 DIVIDE . factor2

    REAL   shift, and go to state 1
    MINUS  shift, and go to state 46
    LEFT   shift, and go to state 47

    factor2  go to state 53


state 37

   16 term2: term2 MULTIPLY . factor2

    REAL   shift, and go to state 1
    MINUS  shift, and go to state 46
    LEFT   shift, and go to state 47

    factor2  go to state 54


state 38

   31 bool: boolean_var boolean_op . boolean_var

    TRUE   shift, and go to state 5
    FALSE  shift, and go to state 6

    boolean_var  go to state 55


state 39

    3 stmt: bool DONE .

    $default  reduce using rule 3 (stmt)


state 40

   11 factor: LEFT expr RIGHT .

    $default  reduce using rule 11 (factor)


state 41

   20 factor2: LEFT expr2 RIGHT .

    $default  reduce using rule 20 (factor2)


state 42

   12 factor: MINUS . ENT

    ENT  shift, and go to state 17


state 43

   11 factor: LEFT . expr RIGHT

    ENT    shift, and go to state 2
    MINUS  shift, and go to state 42
    LEFT   shift, and go to state 43

    expr    go to state 18
    term    go to state 9
    factor  go to state 10


state 44

    4 expr: expr PLUS term .
    7 term: term . MULTIPLY factor
    8     | term . DIVIDE factor

    DIVIDE    shift, and go to state 31
    MULTIPLY  shift, and go to state 32

    $default  reduce using rule 4 (expr)


state 45

    5 expr: expr MINUS term .
    7 term: term . MULTIPLY factor
    8     | term . DIVIDE factor

    DIVIDE    shift, and go to state 31
    MULTIPLY  shift, and go to state 32

    $default  reduce using rule 5 (expr)


state 46

   21 factor2: MINUS . REAL

    REAL  shift, and go to state 16


state 47

   20 factor2: LEFT . expr2 RIGHT

    REAL   shift, and go to state 1
    MINUS  shift, and go to state 46
    LEFT   shift, and go to state 47

    expr2    go to state 19
    term2    go to state 12
    factor2  go to state 13


state 48

   13 expr2: expr2 . PLUS term2
   14      | expr2 . MINUS term2
   30 bool: expr boolean_op expr2 .

    PLUS   shift, and go to state 33
    MINUS  shift, and go to state 34

    $default  reduce using rule 30 (bool)


state 49

    8 term: term DIVIDE factor .

    $default  reduce using rule 8 (term)


state 50

    7 term: term MULTIPLY factor .

    $default  reduce using rule 7 (term)


state 51

   13 expr2: expr2 PLUS term2 .
   16 term2: term2 . MULTIPLY factor2
   17      | term2 . DIVIDE factor2

    DIVIDE    shift, and go to state 36
    MULTIPLY  shift, and go to state 37

    $default  reduce using rule 13 (expr2)


state 52

   14 expr2: expr2 MINUS term2 .
   16 term2: term2 . MULTIPLY factor2
   17      | term2 . DIVIDE factor2

    DIVIDE    shift, and go to state 36
    MULTIPLY  shift, and go to state 37

    $default  reduce using rule 14 (expr2)


state 53

   17 term2: term2 DIVIDE factor2 .

    $default  reduce using rule 17 (term2)


state 54

   16 term2: term2 MULTIPLY factor2 .

    $default  reduce using rule 16 (term2)


state 55

   31 bool: boolean_var boolean_op boolean_var .

    $default  reduce using rule 31 (bool)
