Terminals unused in grammar

   THEN
   IF
   ELSE
   SEMI
   STR


Grammar

    0 $accept: command $end

    1 command: stmt DONE command
    2        | stmt

    3 stmt: expr
    4     | expr2
    5     | bool

    6 expr: expr PLUS term
    7     | expr MINUS term
    8     | term

    9 term: term MULTIPLY factor
   10     | term DIVIDE factor
   11     | factor

   12 factor: ENT
   13       | LEFT expr RIGHT
   14       | MINUS ENT

   15 expr2: expr2 PLUS term2
   16      | expr2 MINUS term2
   17      | term2

   18 term2: term2 MULTIPLY factor2
   19      | term2 DIVIDE factor2
   20      | factor2

   21 factor2: REAL
   22        | LEFT expr2 RIGHT
   23        | MINUS REAL

   24 boolean_op: EQUALS
   25           | GREATERTHAN
   26           | LESSERTHAN
   27           | GREATEROREQUALSTHAN
   28           | LESSEROREQUALSTHAN
   29           | DIFFERENTTHAN

   30 boolean_var: TRUE
   31            | FALSE

   32 bool: expr boolean_op expr2
   33     | boolean_var boolean_op boolean_var


Terminals, with rules where they appear

$end (0) 0
error (256)
REAL (258) 21 23
ENT (259) 12 14
PLUS (260) 6 15
MINUS (261) 7 14 16 23
DIVIDE (262) 10 19
MULTIPLY (263) 9 18
LEFT (264) 13 22
RIGHT (265) 13 22
DONE (266) 1
LESSEROREQUALSTHAN (267) 28
GREATEROREQUALSTHAN (268) 27
DIFFERENTTHAN (269) 29
LESSERTHAN (270) 26
GREATERTHAN (271) 25
EQUALS (272) 24
THEN (273)
IF (274)
ELSE (275)
SEMI (276)
STR (277)
TRUE (278) 30
FALSE (279) 31


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
command (26)
    on left: 1 2, on right: 0 1
stmt (27)
    on left: 3 4 5, on right: 1 2
expr (28)
    on left: 6 7 8, on right: 3 6 7 13 32
term (29)
    on left: 9 10 11, on right: 6 7 8 9 10
factor (30)
    on left: 12 13 14, on right: 9 10 11
expr2 (31)
    on left: 15 16 17, on right: 4 15 16 22 32
term2 (32)
    on left: 18 19 20, on right: 15 16 17 18 19
factor2 (33)
    on left: 21 22 23, on right: 18 19 20
boolean_op (34)
    on left: 24 25 26 27 28 29, on right: 32 33
boolean_var (35)
    on left: 30 31, on right: 33
bool (36)
    on left: 32 33, on right: 5


state 0

    0 $accept: . command $end

    REAL   shift, and go to state 1
    ENT    shift, and go to state 2
    MINUS  shift, and go to state 3
    LEFT   shift, and go to state 4
    TRUE   shift, and go to state 5
    FALSE  shift, and go to state 6

    command      go to state 7
    stmt         go to state 8
    expr         go to state 9
    term         go to state 10
    factor       go to state 11
    expr2        go to state 12
    term2        go to state 13
    factor2      go to state 14
    boolean_var  go to state 15
    bool         go to state 16


state 1

   21 factor2: REAL .

    $default  reduce using rule 21 (factor2)


state 2

   12 factor: ENT .

    $default  reduce using rule 12 (factor)


state 3

   14 factor: MINUS . ENT
   23 factor2: MINUS . REAL

    REAL  shift, and go to state 17
    ENT   shift, and go to state 18


state 4

   13 factor: LEFT . expr RIGHT
   22 factor2: LEFT . expr2 RIGHT

    REAL   shift, and go to state 1
    ENT    shift, and go to state 2
    MINUS  shift, and go to state 3
    LEFT   shift, and go to state 4

    expr     go to state 19
    term     go to state 10
    factor   go to state 11
    expr2    go to state 20
    term2    go to state 13
    factor2  go to state 14


state 5

   30 boolean_var: TRUE .

    $default  reduce using rule 30 (boolean_var)


state 6

   31 boolean_var: FALSE .

    $default  reduce using rule 31 (boolean_var)


state 7

    0 $accept: command . $end

    $end  shift, and go to state 21


state 8

    1 command: stmt . DONE command
    2        | stmt .

    DONE  shift, and go to state 22

    $default  reduce using rule 2 (command)


state 9

    3 stmt: expr .
    6 expr: expr . PLUS term
    7     | expr . MINUS term
   32 bool: expr . boolean_op expr2

    PLUS                 shift, and go to state 23
    MINUS                shift, and go to state 24
    LESSEROREQUALSTHAN   shift, and go to state 25
    GREATEROREQUALSTHAN  shift, and go to state 26
    DIFFERENTTHAN        shift, and go to state 27
    LESSERTHAN           shift, and go to state 28
    GREATERTHAN          shift, and go to state 29
    EQUALS               shift, and go to state 30

    $default  reduce using rule 3 (stmt)

    boolean_op  go to state 31


state 10

    8 expr: term .
    9 term: term . MULTIPLY factor
   10     | term . DIVIDE factor

    DIVIDE    shift, and go to state 32
    MULTIPLY  shift, and go to state 33

    $default  reduce using rule 8 (expr)


state 11

   11 term: factor .

    $default  reduce using rule 11 (term)


state 12

    4 stmt: expr2 .
   15 expr2: expr2 . PLUS term2
   16      | expr2 . MINUS term2

    PLUS   shift, and go to state 34
    MINUS  shift, and go to state 35

    $default  reduce using rule 4 (stmt)


state 13

   17 expr2: term2 .
   18 term2: term2 . MULTIPLY factor2
   19      | term2 . DIVIDE factor2

    DIVIDE    shift, and go to state 36
    MULTIPLY  shift, and go to state 37

    $default  reduce using rule 17 (expr2)


state 14

   20 term2: factor2 .

    $default  reduce using rule 20 (term2)


state 15

   33 bool: boolean_var . boolean_op boolean_var

    LESSEROREQUALSTHAN   shift, and go to state 25
    GREATEROREQUALSTHAN  shift, and go to state 26
    DIFFERENTTHAN        shift, and go to state 27
    LESSERTHAN           shift, and go to state 28
    GREATERTHAN          shift, and go to state 29
    EQUALS               shift, and go to state 30

    boolean_op  go to state 38


state 16

    5 stmt: bool .

    $default  reduce using rule 5 (stmt)


state 17

   23 factor2: MINUS REAL .

    $default  reduce using rule 23 (factor2)


state 18

   14 factor: MINUS ENT .

    $default  reduce using rule 14 (factor)


state 19

    6 expr: expr . PLUS term
    7     | expr . MINUS term
   13 factor: LEFT expr . RIGHT

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    RIGHT  shift, and go to state 39


state 20

   15 expr2: expr2 . PLUS term2
   16      | expr2 . MINUS term2
   22 factor2: LEFT expr2 . RIGHT

    PLUS   shift, and go to state 34
    MINUS  shift, and go to state 35
    RIGHT  shift, and go to state 40


state 21

    0 $accept: command $end .

    $default  accept


state 22

    1 command: stmt DONE . command

    REAL   shift, and go to state 1
    ENT    shift, and go to state 2
    MINUS  shift, and go to state 3
    LEFT   shift, and go to state 4
    TRUE   shift, and go to state 5
    FALSE  shift, and go to state 6

    command      go to state 41
    stmt         go to state 8
    expr         go to state 9
    term         go to state 10
    factor       go to state 11
    expr2        go to state 12
    term2        go to state 13
    factor2      go to state 14
    boolean_var  go to state 15
    bool         go to state 16


state 23

    6 expr: expr PLUS . term

    ENT    shift, and go to state 2
    MINUS  shift, and go to state 42
    LEFT   shift, and go to state 43

    term    go to state 44
    factor  go to state 11


state 24

    7 expr: expr MINUS . term

    ENT    shift, and go to state 2
    MINUS  shift, and go to state 42
    LEFT   shift, and go to state 43

    term    go to state 45
    factor  go to state 11


state 25

   28 boolean_op: LESSEROREQUALSTHAN .

    $default  reduce using rule 28 (boolean_op)


state 26

   27 boolean_op: GREATEROREQUALSTHAN .

    $default  reduce using rule 27 (boolean_op)


state 27

   29 boolean_op: DIFFERENTTHAN .

    $default  reduce using rule 29 (boolean_op)


state 28

   26 boolean_op: LESSERTHAN .

    $default  reduce using rule 26 (boolean_op)


state 29

   25 boolean_op: GREATERTHAN .

    $default  reduce using rule 25 (boolean_op)


state 30

   24 boolean_op: EQUALS .

    $default  reduce using rule 24 (boolean_op)


state 31

   32 bool: expr boolean_op . expr2

    REAL   shift, and go to state 1
    MINUS  shift, and go to state 46
    LEFT   shift, and go to state 47

    expr2    go to state 48
    term2    go to state 13
    factor2  go to state 14


state 32

   10 term: term DIVIDE . factor

    ENT    shift, and go to state 2
    MINUS  shift, and go to state 42
    LEFT   shift, and go to state 43

    factor  go to state 49


state 33

    9 term: term MULTIPLY . factor

    ENT    shift, and go to state 2
    MINUS  shift, and go to state 42
    LEFT   shift, and go to state 43

    factor  go to state 50


state 34

   15 expr2: expr2 PLUS . term2

    REAL   shift, and go to state 1
    MINUS  shift, and go to state 46
    LEFT   shift, and go to state 47

    term2    go to state 51
    factor2  go to state 14


state 35

   16 expr2: expr2 MINUS . term2

    REAL   shift, and go to state 1
    MINUS  shift, and go to state 46
    LEFT   shift, and go to state 47

    term2    go to state 52
    factor2  go to state 14


state 36

   19 term2: term2 DIVIDE . factor2

    REAL   shift, and go to state 1
    MINUS  shift, and go to state 46
    LEFT   shift, and go to state 47

    factor2  go to state 53


state 37

   18 term2: term2 MULTIPLY . factor2

    REAL   shift, and go to state 1
    MINUS  shift, and go to state 46
    LEFT   shift, and go to state 47

    factor2  go to state 54


state 38

   33 bool: boolean_var boolean_op . boolean_var

    TRUE   shift, and go to state 5
    FALSE  shift, and go to state 6

    boolean_var  go to state 55


state 39

   13 factor: LEFT expr RIGHT .

    $default  reduce using rule 13 (factor)


state 40

   22 factor2: LEFT expr2 RIGHT .

    $default  reduce using rule 22 (factor2)


state 41

    1 command: stmt DONE command .

    $default  reduce using rule 1 (command)


state 42

   14 factor: MINUS . ENT

    ENT  shift, and go to state 18


state 43

   13 factor: LEFT . expr RIGHT

    ENT    shift, and go to state 2
    MINUS  shift, and go to state 42
    LEFT   shift, and go to state 43

    expr    go to state 19
    term    go to state 10
    factor  go to state 11


state 44

    6 expr: expr PLUS term .
    9 term: term . MULTIPLY factor
   10     | term . DIVIDE factor

    DIVIDE    shift, and go to state 32
    MULTIPLY  shift, and go to state 33

    $default  reduce using rule 6 (expr)


state 45

    7 expr: expr MINUS term .
    9 term: term . MULTIPLY factor
   10     | term . DIVIDE factor

    DIVIDE    shift, and go to state 32
    MULTIPLY  shift, and go to state 33

    $default  reduce using rule 7 (expr)


state 46

   23 factor2: MINUS . REAL

    REAL  shift, and go to state 17


state 47

   22 factor2: LEFT . expr2 RIGHT

    REAL   shift, and go to state 1
    MINUS  shift, and go to state 46
    LEFT   shift, and go to state 47

    expr2    go to state 20
    term2    go to state 13
    factor2  go to state 14


state 48

   15 expr2: expr2 . PLUS term2
   16      | expr2 . MINUS term2
   32 bool: expr boolean_op expr2 .

    PLUS   shift, and go to state 34
    MINUS  shift, and go to state 35

    $default  reduce using rule 32 (bool)


state 49

   10 term: term DIVIDE factor .

    $default  reduce using rule 10 (term)


state 50

    9 term: term MULTIPLY factor .

    $default  reduce using rule 9 (term)


state 51

   15 expr2: expr2 PLUS term2 .
   18 term2: term2 . MULTIPLY factor2
   19      | term2 . DIVIDE factor2

    DIVIDE    shift, and go to state 36
    MULTIPLY  shift, and go to state 37

    $default  reduce using rule 15 (expr2)


state 52

   16 expr2: expr2 MINUS term2 .
   18 term2: term2 . MULTIPLY factor2
   19      | term2 . DIVIDE factor2

    DIVIDE    shift, and go to state 36
    MULTIPLY  shift, and go to state 37

    $default  reduce using rule 16 (expr2)


state 53

   19 term2: term2 DIVIDE factor2 .

    $default  reduce using rule 19 (term2)


state 54

   18 term2: term2 MULTIPLY factor2 .

    $default  reduce using rule 18 (term2)


state 55

   33 bool: boolean_var boolean_op boolean_var .

    $default  reduce using rule 33 (bool)
